---
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "./ui/button";

interface Props {
	cardTitle: string;
    cardTechnologies: string;
    cardImage: string;
    cardDesc: string;
    cardLink: string;
    cardLinkDesc: string;
}

const { cardTitle, cardTechnologies, cardImage, cardDesc, cardLink, cardLinkDesc } = Astro.props;

---

<div class="slideIn flex flex-col items-center flip-card w-full h-[365px] xs:h-[400px] sm:h-[450px] md:h-[350px] lg:h-[475px]">
   <div class="flip-card-inner ">
     <!-- Forward Facing side of the Card -->
     <Card className="dark:bg-neutral-800 text-left flip-card-front h-full w-full">
        <CardHeader>
            <img 
                src={cardImage}
                alt="project" 
                class="md:h-[140px] lg:h-[280px]"
            />
            <CardTitle>
                <p class="mt-6 text-xl sm:text-2xl md:text-xl lg:text-3xl font-semibold tracking-normal">{cardTitle}</p>
            </CardTitle>
            <CardDescription>
                <p class="text-neutral-300 font-normal">{cardTechnologies}</p>
            </CardDescription>
        </CardHeader>
        <CardContent>
            <p class="text-neutral-600">Hover for more project info</p>
        </CardContent>
    </Card>

    <!-- Backward Facing side of the Card -->
    <Card className="w-full h-full dark:bg-neutral-800 shadow-md hover:shadow-xl transition-all duration-100 flip-card-back">
        <CardContent className="flex flex-col items-start justify-around text-left gap-4 sm:gap-6 lg:gap-10 px-6 lg:px-16">
            <h3 class="text-lg sm:text-xl lg:text-2xl font-bold ">Project Description</h3>
            <p class="text-sm sm:text-base lg:text-lg" set:html={cardDesc}></p>
            <a href={cardLink} class="w-2/3 flex flex-row gap-2 items-center">
                <Button variant={"secondary"} size={"sm"} className="w-full hover:-translate-y-1 duration-200 transition-all hover:shadow-md dark:bg-neutral-900 hover:dark:bg-neutral-900">
                   <div class="flex flex-row gap-2 items-center p-4">
                      <p>{cardLinkDesc}</p>
                      <img src="/link.svg" alt="link" />
                   </div>
                </Button>
            </a>
        </CardContent>
    </Card>
   </div>
</div>


<div class="slideIn group overflow-hidden  flex flex-col items-center flip-card w-full h-[365px] xs:h-[400px] sm:h-[450px] md:h-[350px] lg:h-[475px]">
  <div class="flip-card-inner ">
    <!-- Forward Facing side of the Card -->
    <Card className="dark:bg-neutral-800 text-left flip-card-front h-full w-full">
       <CardHeader>
           <img 
               src={cardImage}
               alt="project" 
               class="md:h-[140px] lg:h-[280px]"
           />
           <CardTitle>
               <p class="mt-6 text-xl sm:text-2xl md:text-xl lg:text-3xl font-semibold tracking-normal">{cardTitle}</p>
           </CardTitle>
           <CardDescription>
               <p class="text-neutral-300 font-normal">{cardTechnologies}</p>
           </CardDescription>
       </CardHeader>
       <CardContent>
           <p class="text-neutral-600">Hover for more project info</p>
       </CardContent>
   </Card>

   <div class="absolute bg-gray-50 -bottom-24 w-56 p-3 flex flex-col gap-1 group-hover:-bottom-0 group-hover:duration-600 duration-500">
     <span class="text-lime-400 font-bold text-xs">TAILWIND</span>
     <span class="text-gray-800 font-bold text-3xl">Cheat Sheet</span>
     <p class="text-neutral-800">Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
   </div>

   
  </div>
</div>


<style>
.flip-card {
  background-color: transparent;
  perspective: 1000px;
}

.title {
  font-size: 1.5em;
  font-weight: 900;
  text-align: center;
  margin: 0;
}

.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.flip-card:hover .flip-card-inner {
  transform: rotateY(180deg);
}

.flip-card-front, .flip-card-back {
  box-shadow: 0 8px 14px 0 rgba(0,0,0,0.2);
  position: absolute;
  display: flex;
  flex-direction: column;
  justify-content: center;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;

}

.flip-card-front {
 
}

.flip-card-back {
 
  transform: rotateY(180deg);
}
</style>


<script>
	//Callback function for intersectionObserver API
	const callback = function (entries: any) {
		entries.forEach((entry: any) => {
			if (entry.isIntersecting) {
				entry.target.classList.add("animate-slideInUp");
			}
		});
	};

	//Create an observer
	const observer = new IntersectionObserver(callback);

	//Observe when the selected element enters viewport
	document.querySelectorAll(".slideIn").forEach(function (target) {
		observer.observe(target);
	});
</script>
