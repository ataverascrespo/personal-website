---
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "../ui/button";

interface Props {
	cardTitle: string;
    cardTechnologies: string;
    cardImage: string;
    cardDesc: string;
    cardLink: string;
    cardLinkDesc: string;
}

const { cardTitle, cardTechnologies, cardImage, cardDesc, cardLink, cardLinkDesc } = Astro.props;

---
<div class="slideIn relative group overflow-hidden flex flex-col items-center w-full h-full">
  <div class="hidden lg:block">
    <Card className="dark:bg-neutral-800 text-left h-full w-full group-hover:blur-sm group-hover:scale-[0.98] group-hover:duration-600 duration-500">
      <CardHeader className="h-[275px] xs:h-[325px] sm:h-[400px] md:h-[300px] lg:h-[400px] xl:h-[450px] w-full">
          <img 
              src={cardImage}
              alt="project" 
              class="w-full sm:h-[260px] sm:w-[523px] md:w-[278px] md:h-[140px] lg:w-full lg:h-[230px] xl:h-[290px]"
          />
          <CardTitle>
              <p class="mt-6 text-xl sm:text-2xl md:text-xl lg:text-3xl font-semibold tracking-normal">{cardTitle}</p>
          </CardTitle>
          <CardDescription>
              <p class="text-sm md:text-base text-neutral-300 font-normal">{cardTechnologies}</p>
          </CardDescription>
      </CardHeader>
      <CardContent>
          <p class="text-xs sm:text-sm text-neutral-600">Hover for more project info</p>
      </CardContent>
  </Card>

   <div class="absolute dark:bg-neutral-700 shadow-xl rounded-md -bottom-[325px] w-full p-6 flex flex-col gap-4 group-hover:-bottom-0 group-hover:duration-600 duration-500">
      <p class="text-sm sm:text-base text-neutral-100 font-semibold" set:html={cardDesc}></p>
      <a href={cardLink} class="w-full md:w-2/3 flex flex-row gap-2 items-center">
          <Button variant={"secondary"} size={"sm"} className="w-full hover:-translate-y-1 duration-200 transition-all hover:shadow-md dark:bg-neutral-900 hover:dark:bg-neutral-900">
              <div class="flex flex-row gap-2 items-center p-4">
                <p>{cardLinkDesc}</p>
                <img src="/link.svg" alt="link" />
              </div>
          </Button>
      </a>
   </div>

  </div>
  
  <div class="block lg:hidden">
    <Card className="dark:bg-neutral-800 text-left h-full w-full">
      <CardHeader className="h-[275px] xs:h-[325px] sm:h-[400px] md:h-[300px] lg:h-[400px] xl:h-[450px] w-full">
          <img 
              src={cardImage}
              alt="project" 
              class="w-full sm:h-[260px] sm:w-[523px] md:w-[278px] md:h-[140px] lg:w-full lg:h-[230px] xl:h-[290px]"
          />
          <CardTitle>
              <p class="mt-6 text-xl sm:text-2xl md:text-xl lg:text-3xl font-semibold tracking-normal">{cardTitle}</p>
          </CardTitle>
          <CardDescription>
              <p class="text-sm md:text-base text-neutral-300 font-normal">{cardTechnologies}</p>
          </CardDescription>
      </CardHeader>
      <CardContent>
        <div class="flex flex-col gap-4">
            <p class="text-sm sm:text-base text-neutral-100 font-semibold" set:html={cardDesc}></p>
            <a href={cardLink} class="w-full md:w-2/3 flex flex-row gap-2 items-center">
                <Button variant={"secondary"} size={"sm"} className="w-full hover:-translate-y-1 duration-200 transition-all hover:shadow-md dark:bg-neutral-900 hover:dark:bg-neutral-900">
                    <div class="flex flex-row gap-2 items-center p-4">
                      <p>{cardLinkDesc}</p>
                      <img src="/link.svg" alt="link" />
                    </div>
                </Button>
            </a>
         </div>
      </CardContent>
  </Card>

  </div>
</div>


<script>
	//Callback function for intersectionObserver API
	const callback = function (entries: any) {
		entries.forEach((entry: any) => {
			if (entry.isIntersecting) {
				entry.target.classList.add("animate-slideInUp");
			}
		});
	};

	//Create an observer
	const observer = new IntersectionObserver(callback);

	//Observe when the selected element enters viewport
	document.querySelectorAll(".slideIn").forEach(function (target) {
		observer.observe(target);
	});
</script>
