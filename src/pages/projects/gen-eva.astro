---
import { Button } from '@/components/ui/button';
import Layout from '../../layouts/Layout.astro';
import '@/styles/globals.css'
---

<Layout title="Alex Taveras-Crespo">
    <p id="header" class="hidden"></p>

    <div class="w-full h-full flex flex-col items-center justify-center bg-neutral-900 py-24">
        <div class="w-full h-full flex flex-col container justify-center items-center gap-12">
            <div class="flex flex-col justify-center items-center gap-8">
                <div class="flex flex-col justify-center items-center gap-6">
                    <!-- Project Image -->
                    <img 
                    transition:name={`gen-eva image`}
                    src="/gen-eva.png" 
                    alt="gen-eva" 
                    class="w-full md:w-[50%] rounded-lg shadow-xl">                    
                </div>


                <div class="w-full flex flex-col gap-2 items-center text-center">
                    <!-- Name -->
                    <h1 class="text-4xl md:text-6xl font-extrabold">Gen-EVA</h1>
                
                    <div class="flex flex-col gap-6 items-center ">
                        <!-- Technologies used -->
                        <h2 class="text-xl md:text-2xl font-normal text-neutral-600">Azure AI Search Index, OpenAI GPT-4 LLM, .NET 8, Cosmos DB, Azure VM, Power Apps</h2> 
                        <!-- Description -->
                        <p class="font-normal text-lg md:text-xl leading-relaxed max-w-4xl">
                            Gen-EVA is a project that was created for the 5th annual Ontario Public Service / Microsoft-sponsored hackathon. My group of 3 and I created Gen-EVA to serve as an AI supplementary/replacement tool for the existing OPS internal career portal. We placed 3rd in the 'User-Centric' category!
                        </p>
                        <!-- Description -->
                        <p class="font-normal text-lg md:text-xl leading-relaxed max-w-4xl">
                            The old career portal is rigid and slow, only allowing users to search with fixed-input parameters, and only showing position titles in the results. With 600+ jobs at any given moment, it meant employees would have to comb through each position to find one they like. We identified that natural language prompts, plus resume scanning, would allow AI to find ONLY the most relevant positions for a given user, saving them hours, if not days, when searching for jobs.
                        </p>

                        <!-- Description -->
                        <p class="font-normal text-lg md:text-xl leading-relaxed max-w-4xl">
                            To create this project, we followed the Retrieval Augmented Generation (RAG) architecture. I stored job data in an Azure Blob Storage instance, which was then interpreted and converted into vector data in an Azure Cosmos DB. That vector data powers the semantic search and vector search capabilities of an Azure AI Search Index. The search index powers an OpenAI GPT-4 LLM, which the user can interact with from a Power Apps front-end via GET and POST requests to a custom-coded .NET 8 REST API. 
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</Layout>


