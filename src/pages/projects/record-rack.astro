---
import Layout from '../../layouts/Layout.astro';
import '@/styles/globals.css'
import ProjectsPage from '@/components/ProjectsPage.astro';
---

<Layout title="Alex Taveras-Crespo - Record Rack">
    <p id="header" class="hidden"></p>
    <ProjectsPage
        pageTitle='Record Rack'
        pageImage='/recordrack.png'
        pageAlt='record-rack'
        pageTechnologies='.NET 7, PostgreSQL, React, TypeScript, Tailwind CSS, Docker, AWS EC2/RDS, Nginx'
        pageLinkOne='https://recordrack.ca'
        pageLinkOneText='recordrack.ca'
        pageLinkTwo='https://github.com/ataverascrespo/RecordRack'
        pageLinkTwoText='GitHub Repo'
        pageDescription=`Record Rack is a full-stack, progressive web app I've been developing for 2 years now. Users can create accounts, then curate a digital collection of their favourite albums and tracks, powered by Spotify Web API integration. Users can also discover/follow other users, view their albums/tracks, and leave likes on their collection. <br><br>

        I used C# and .NET 7 to build a REST API with OAuth 2.0 authorization. It interacts securely with a PostgreSQL database. I've also integrated some 3rd party APIs, namely Cloudinary for image storage, Twilio Sendgrid for emails, and Spotify to provide all the music.  The API is containerized in a Docker container, and deployed onto an AWS EC2 instance, secured with NGINX load balancing and SSL certificates. The PostgreSQL database is managed through AWS RDS. However I am in the process of re-deploying onto Google Cloud Platform just due to costs.   <br><br>

        The front-end is a Progressive Web App built with React and TypeScript, designed with Tailwind CSS and shadcn/ui components. I'm using Mobx as the global state management framework.<br><br>

        Through this project, I learned relevant practices such MVC architecture, dependency injection, OAuth 2.0 integration, REST API design, React development, Docker deployment, and AWS services. `
        pageTransition='record-rack image'>
    </ProjectsPage>
</Layout>


